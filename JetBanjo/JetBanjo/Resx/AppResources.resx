<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="app_name" xml:space="preserve">
    <value>Room Battle</value>
  </data>
  <data name="avatar" xml:space="preserve">
    <value>Avatar</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="cannot_detect_backend" xml:space="preserve">
    <value>Cannot detect the server on the local network, you need to manually input it</value>
  </data>
  <data name="change_room" xml:space="preserve">
    <value>Change room</value>
  </data>
  <data name="choose_room" xml:space="preserve">
    <value>Choose Room</value>
  </data>
  <data name="download_err" xml:space="preserve">
    <value>Failed to download, check internet connection</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="example_ip" xml:space="preserve">
    <value>127.0.0.1</value>
  </data>
  <data name="example_room" xml:space="preserve">
    <value>Room 0.1.2</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="infopage" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="ip" xml:space="preserve">
    <value>IP address</value>
  </data>
  <data name="ip_null_or_empty_err_msg" xml:space="preserve">
    <value>The ip field must be specified for this app to work</value>
  </data>
  <data name="ip_settings" xml:space="preserve">
    <value>IP settings</value>
  </data>
  <data name="ip_text" xml:space="preserve">
    <value>Input the IP address of the server</value>
  </data>
  <data name="issue_light_bright" xml:space="preserve">
    <value>Close the curtains</value>
  </data>
  <data name="issue_co2_soft" xml:space="preserve">
    <value>Open the window</value>
  </data>
  <data name="issue_temp_cold" xml:space="preserve">
    <value>Ensure that the windows are closed</value>
  </data>
  <data name="issue_light_dark" xml:space="preserve">
    <value>Are you watching a movie? Otherwise remove curtains or turn on the light</value>
  </data>
  <data name="issue_temp_fire" xml:space="preserve">
    <value>Open the windows</value>
  </data>
  <data name="issue_hum_dry" xml:space="preserve">
    <value>Close windows and doors to prevent drafts</value>
  </data>
  <data name="issue_hum_wet" xml:space="preserve">
    <value>Open windows and doors to ensure drafts</value>
  </data>
  <data name="issue_temp_ice" xml:space="preserve">
    <value>Ensure that the windows are closed and turn up the heat</value>
  </data>
  <data name="issue_noise" xml:space="preserve">
    <value>There is too much noise in the room, stop trying to compete in volume, if the noise comes from the outside try to close doors and windows</value>
  </data>
  <data name="issue_page" xml:space="preserve">
    <value>Issues</value>
  </data>
  <data name="issue_temp_sweat" xml:space="preserve">
    <value>Open windows</value>
  </data>
  <data name="issue_uv" xml:space="preserve">
    <value>Close the curtains or apply sunscreen if you are sitting in the sun light</value>
  </data>
  <data name="issue_voc" xml:space="preserve">
    <value>Open the windows and doors to ensure drafts, you can also try to remove the source of the smell such as food or garbage</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="q_climate_causes" xml:space="preserve">
    <value>What factors into indoor climate? : Something</value>
  </data>
  <data name="q_climate_effects" xml:space="preserve">
    <value>What effects does bad indoor climate have : very bad!</value>
  </data>
  <data name="q_co2" xml:space="preserve">
    <value>What about CO2? : Do we know?</value>
  </data>
  <data name="q_humidity" xml:space="preserve">
    <value>What about Humidity? : Do we know?</value>
  </data>
  <data name="q_indoor_climate" xml:space="preserve">
    <value>What is Indoor Climate? : We just don't know</value>
  </data>
  <data name="q_light" xml:space="preserve">
    <value>What about Light? : Do we know?</value>
  </data>
  <data name="q_sound" xml:space="preserve">
    <value>What about Sound? : Do we know?</value>
  </data>
  <data name="q_temperature" xml:space="preserve">
    <value>What about Temperature? : Do we know?</value>
  </data>
  <data name="q_voc" xml:space="preserve">
    <value>What about VOC? : Do we know?</value>
  </data>
  <data name="remove_ip" xml:space="preserve">
    <value>Remove IP</value>
  </data>
  <data name="remove_room" xml:space="preserve">
    <value>Remove room</value>
  </data>
  <data name="room" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="room_selector" xml:space="preserve">
    <value>Select Room</value>
  </data>
  <data name="room_settings" xml:space="preserve">
    <value>Room settings</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="issue_co2_severe" xml:space="preserve">
    <value>Open windows and doors to ensure drafts</value>
  </data>
  <data name="issue_hum_dry_temp_high" xml:space="preserve">
    <value>Try to place a glass of water in the sun so it can evaporate, it helps to close the curtains, doors and windows.</value>
  </data>
  <data name="issue_hum_dry_temp_low" xml:space="preserve">
    <value>Close windows and doors to prevent drafts</value>
  </data>
  <data name="issue_hum_wet_temp_high" xml:space="preserve">
    <value>Open windows and doors to ensure drafts or use an air conditioner</value>
  </data>
  <data name="issue_hum_wet_temp_low" xml:space="preserve">
    <value>Increase the temperature by turning on a radiator or something similar.</value>
  </data>
</root>